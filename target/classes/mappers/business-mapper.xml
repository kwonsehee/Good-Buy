<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper 
PUBLIC "-//mybatis.org//DTD Mapepr 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="businessMapper">
   <resultMap type="Business" id="businessResultSet">
      <id property="shopNo" column="SHOP_NO"/>
      <result property="shopCate" column="SHOP_CATE"/>
      <result property="shopAdd" column="SHOP_ADD"/>
      <result property="shopIntro" column="SHOP_INTRO"/>
      <result property="shopTime1" column="SHOP_TIME1"/>
      <result property="topMenu" column="TOP_MENU"/>
      <result property="price" column="PRICE"/>
      <result property="menuInfo" column="MENU_INFO"/>
      <result property="shopPhone" column="SHOP_PHONE"/>
      <result property="userId" column="USER_ID"/>
      <result property="adCash" column="AD_CASH"/>
      <result property="shopTime2" column="SHOP_TIME2"/>
      <result property="shopTime3" column="SHOP_TIME3"/>
      <result property="tNo" column="T_NO"/>
      <result property="avgGrade" column="평균별점"/>
      <result property="faCount" column="단골수"/>
      <result property="reviewCount" column="후기수"/>
      <result property="filePath" column="FILE_PATH"/>
      <result property="originName" column="ORIGIN_NAME"/>
      <result property="changeName" column="CHANGE_NAME"/>
      <result property="status" column="STATUS"/>
      <result property="fNo" column="F_NO"/>
      <result property="shopName" column="SHOP_NAME"/>
      <result property="month1" column="MONTH1"/>
      <result property="busicash" column="BUSICASH"/>
      
   </resultMap>
   <!-- <resultMap type="Attachment" id="AttachmentResultSet">
      <id property="shopNo" column="SHOP_NO"/>
      <result property="fNo" column="F_NO"/>
      <result property="filePath" column="FILE_PATH"/>
      <result property="originName" column="ORIGIN_NAME"/>
      <result property="changeName" column="CHANGE_NAME"/>
      <result property="status" column="STATUS"/>
   </resultMap> -->
   
   <resultMap type="News" id="NewsResultSet">
      <id property="n_no" column="N_NO"/>
      <result property="newsTitle" column="NEWS_TITLE"/>
      <result property="shopNews" column="SHOP_NEWS"/>
      <result property="shopNo" column="SHOP_NO"/>
      <result property="tNo" column="T_NO"/>
      <result property="address_3" column="ADDRESS_3"/>
      <result property="filePath" column="FILE_PATH"/>
      <result property="originName" column="ORIGIN_NAME"/>
      <result property="changeName" column="CHANGE_NAME"/>
      <result property="status" column="STATUS"/>
      <result property="fNo" column="F_NO"/>
      <result property="nStatus" column="NSTATUS"/>
      <result property="photo" column="PHOTO"/>
      <result property="shopName" column="SHOP_NAME"/>
   </resultMap>
   
   
   

   <!-- <resultMap type="NewsAttachment" id="NewsAttachmentResultSet">
      <id property="nNo" column="N_NO"/>
      <result property="fNo" column="F_NO"/>
      <result property="filePath" column="FILE_PATH"/>
      <result property="originName" column="ORIGIN_NAME"/>
      <result property="changeName" column="CHANGE_NAME"/>
      <result property="status" column="STATUS"/>
   </resultMap> -->
   
   <resultMap type="Review" id="ReviewResultSet">
      <id property="shopNo" column="SHOP_NO"/>
      <result property="reviewNo" column="REVIEW_NO"/>
      <result property="status" column="STATUS"/>
      <result property="content" column="CONTENT"/>
      <result property="reviewDate" column="REVIEW_DATE"/>
      <result property="grade" column="GRADE"/>
      <result property="userId" column="USER_ID"/>
      <result property="nickName" column="NICKNAME"/>
      <result property="reviewCount" column="후기수"/>
      <result property="avgGrade" column="평균별점"/>
      <result property="photo" column="PHOTO"/>
   </resultMap>


   <select id="selectbList" parameterType="Town" resultMap="businessResultSet">
      SELECT *
      FROM
      (SELECT V.*
        FROM V_BUS_INFO V
        JOIN TOWN T ON(T.T_NO = V.T_NO)
      WHERE BSTATUS != 'N'
      <if test='area lt 4'>
         AND ADDRESS_1 = #{address_1}
         </if>
         <if test='area lt 3'>
         AND ADDRESS_2 = #{address_2}
         </if>
         <if test='area lt 2'>
         AND ADDRESS_3 =#{address_3}
         </if>
      ORDER BY 단골수 DESC NULLS LAST)
      JOIN AD AD USING(SHOP_NO)
      WHERE ROWNUM <![CDATA[<=]]> 9
      AND VIEW_CNT !=0
   </select>
   
   <select id="selectnList" parameterType="Town" resultMap="NewsResultSet">
      SELECT 
              N_NO
           , NEWS_TITLE
           , SHOP_NEWS
           , SHOP_NO
           , NN.T_NO
           , ADDRESS_3
           , NN.FILE_PATH
           , ORIGIN_NAME
           , CHANGE_NAME
           , STATUS
           , F_NO
           , PHOTO
           , SHOP_NAME
            FROM
        (
        SELECT  
            N.N_NO
           , NEWS_TITLE
           , SHOP_NEWS
           , SHOP_NO
           , N.T_NO
           , ADDRESS_3
           , FILE_PATH
           , ORIGIN_NAME
           , CHANGE_NAME
           , STATUS
           , NF.F_NO
      FROM 
            NEWS N
      JOIN TOWN T ON(T.T_NO = N.T_NO)
      LEFT JOIN NEWS_FILE NF ON(N.N_NO = NF.N_NO)
      LEFT JOIN ADDFILE A ON(A.F_NO = NF.F_NO)
      <if test='area lt 4'>
         AND ADDRESS_1 = #{address_1}
         </if>
         <if test='area lt 3'>
         AND ADDRESS_2 = #{address_2}
         </if>
         <if test='area lt 2'>
         AND ADDRESS_3 =#{address_3}
         </if>
       AND NSTATUS != 'N'
        ORDER BY N_NO DESC 
        ) NN
        JOIN AD AD USING(SHOP_NO)
        JOIN BUS_INFO USING(SHOP_NO)
        JOIN USER_INFO USING(USER_ID)
      WHERE ROWNUM <![CDATA[<=]]> 4
       AND VIEW_CNT !=0
       AND BSTATUS != 'N'
   </select>
   
   <!-- <select id="selectfList" resultMap="AttachmentResultSet" >
      SELECT
          SHOP_NO
       ,  F_NO
       ,  FILE_PATH
       ,  ORIGIN_NAME
       ,  CHANGE_NAME
       ,  STATUS
       FROM 
          ADDFILE
       JOIN BUS_FILE USING(F_NO)
       JOIN BUS_INFO USING(SHOP_NO)
   </select>
   
   
   <select id="selectnfList" resultMap="NewsAttachmentResultSet" >
      SELECT
          N_NO
       ,  F_NO
       ,  FILE_PATH
       ,  ORIGIN_NAME
       ,  CHANGE_NAME
       ,  STATUS
       FROM 
          ADDFILE
       JOIN NEWS_FILE USING(F_NO)
       JOIN NEWS USING(N_NO)
   </select>    -->
   
   <select id="selectrList" resultMap="ReviewResultSet">
        SELECT
         B.SHOP_NO
         ,BR.REVIEW_NO
         ,STATUS
         ,CONTENT
         ,REVIEW_DATE
         ,GRADE
         ,R.USER_ID
         ,NICKNAME
      FROM REVIEW R
      JOIN BUS_REVIEW BR ON(BR.REVIEW_NO = R.REVIEW_NO)
      JOIN BUS_INFO B ON(B.SHOP_NO = BR.SHOP_NO)
      JOIN USER_INFO U ON(U.USER_ID = R.USER_ID)
        WHERE (R.REVIEW_NO,  BR.SHOP_NO) IN ( SELECT MAX(R.REVIEW_NO), SHOP_NO
                                              FROM REVIEW R
      JOIN BUS_REVIEW BR ON(BR.REVIEW_NO = R.REVIEW_NO)
        GROUP BY SHOP_NO)
        AND BSTATUS != 'N'
   </select>
   
   <select id="selectGradebList" parameterType="Town" resultMap="businessResultSet">
      SELECT *
      FROM
      (SELECT V.*
        FROM V_BUS_INFO V
        JOIN TOWN T ON(T.T_NO = V.T_NO)
      
      <if test='area lt 4'>
         AND ADDRESS_1 = #{address_1}
         </if>
         <if test='area lt 3'>
         AND ADDRESS_2 = #{address_2}
         </if>
         <if test='area lt 2'>
         AND ADDRESS_3 =#{address_3}
         </if>
      ORDER BY 평균별점 DESC NULLS LAST)
      JOIN AD AD USING(SHOP_NO)
      WHERE ROWNUM <![CDATA[<=]]> 9
      AND VIEW_CNT !=0
      AND BSTATUS != 'N' 
   </select>
   
   <select id="selectReviewbList" parameterType="Town" resultMap="businessResultSet">
      SELECT *
      FROM
      (SELECT V.*
        FROM V_BUS_INFO V
        JOIN TOWN T ON(T.T_NO = V.T_NO)
      <if test='area lt 4'>
         AND ADDRESS_1 = #{address_1}
         </if>
         <if test='area lt 3'>
         AND ADDRESS_2 = #{address_2}
         </if>
         <if test='area lt 2'>
         AND ADDRESS_3 =#{address_3}
         </if>
      ORDER BY 후기수 DESC NULLS LAST)
      JOIN AD AD USING(SHOP_NO)
      WHERE ROWNUM <![CDATA[<=]]> 9
      AND VIEW_CNT !=0
      AND BSTATUS != 'N'
   </select>
   
   <select id="selectJobnList" parameterType="Town" resultMap="NewsResultSet">

        SELECT  
            N.N_NO
           , NEWS_TITLE
           , SHOP_NEWS
           , N.SHOP_NO
           , N.T_NO
           , ADDRESS_3
           , FILE_PATH
           , ORIGIN_NAME
           , CHANGE_NAME
           , A.STATUS
           , NF.F_NO
           , PHOTO
           , SHOP_NAME
      FROM 
            NEWS N
      JOIN TOWN T ON(T.T_NO = N.T_NO)
      LEFT JOIN NEWS_FILE NF ON(N.N_NO = NF.N_NO)
      LEFT JOIN ADDFILE A ON(A.F_NO = NF.F_NO)
      JOIN BUS_INFO B ON(B.SHOP_NO = N.SHOP_NO)
      JOIN AD AD ON(AD.SHOP_NO = N.SHOP_NO)
      JOIN USER_INFO USING(USER_ID)
       WHERE NSTATUS != 'N'
      <if test='area lt 4'>
         AND ADDRESS_1 = #{address_1}
         </if>
         <if test='area lt 3'>
         AND ADDRESS_2 = #{address_2}
         </if>
         <if test='area lt 2'>
         AND ADDRESS_3 =#{address_3}
         </if>
      AND SHOP_CATE='일자리'
      AND VIEW_CNT !=0
      AND BSTATUS != 'N'
        ORDER BY N_NO DESC 
         
        
      
   </select>
   
   <select id="selectFruitnList" parameterType="Town" resultMap="NewsResultSet">

        SELECT  
            N.N_NO
           , NEWS_TITLE
           , SHOP_NEWS
           , N.SHOP_NO
           , N.T_NO
           , ADDRESS_3
           , FILE_PATH
           , ORIGIN_NAME
           , CHANGE_NAME
           , A.STATUS
           , NF.F_NO
           , PHOTO
           , SHOP_NAME
      FROM 
            NEWS N
      JOIN TOWN T ON(T.T_NO = N.T_NO)
      LEFT JOIN NEWS_FILE NF ON(N.N_NO = NF.N_NO)
      LEFT JOIN ADDFILE A ON(A.F_NO = NF.F_NO)
      JOIN BUS_INFO B ON(B.SHOP_NO = N.SHOP_NO)
      JOIN AD AD ON(AD.SHOP_NO = N.SHOP_NO)
      JOIN USER_INFO USING(USER_ID)
      WHERE NSTATUS != 'N'
      <if test='area lt 4'>
         AND ADDRESS_1 = #{address_1}
         </if>
         <if test='area lt 3'>
         AND ADDRESS_2 = #{address_2}
         </if>
         <if test='area lt 2'>
         AND ADDRESS_3 =#{address_3}
         </if>
      AND SHOP_CATE='농수산물'
      AND VIEW_CNT !=0
      AND BSTATUS != 'N'
        ORDER BY N_NO DESC 

   </select>
   
   <select id="selectCarnList" parameterType="Town" resultMap="NewsResultSet">

        SELECT  
            N.N_NO
           , NEWS_TITLE
           , SHOP_NEWS
           , N.SHOP_NO
           , N.T_NO
           , ADDRESS_3
           , FILE_PATH
           , ORIGIN_NAME
           , CHANGE_NAME
           , A.STATUS
           , NF.F_NO
           , PHOTO
           , SHOP_NAME
      FROM 
            NEWS N
      JOIN TOWN T ON(T.T_NO = N.T_NO)
      LEFT JOIN NEWS_FILE NF ON(N.N_NO = NF.N_NO)
      LEFT JOIN ADDFILE A ON(A.F_NO = NF.F_NO)
      JOIN BUS_INFO B ON(B.SHOP_NO = N.SHOP_NO)
      JOIN AD AD ON(AD.SHOP_NO = N.SHOP_NO)
      JOIN USER_INFO USING(USER_ID)
      WHERE NSTATUS != 'N'
      <if test='area lt 4'>
         AND ADDRESS_1 = #{address_1}
         </if>
         <if test='area lt 3'>
         AND ADDRESS_2 = #{address_2}
         </if>
         <if test='area lt 2'>
         AND ADDRESS_3 =#{address_3}
         </if>
      AND SHOP_CATE='중고차'
      AND VIEW_CNT !=0
      AND BSTATUS != 'N'
        ORDER BY N_NO DESC 

   </select>
   
   <select id="selectHousenList" parameterType="Town" resultMap="NewsResultSet">

        SELECT  
            N.N_NO
           , NEWS_TITLE
           , SHOP_NEWS
           , N.SHOP_NO
           , N.T_NO
           , ADDRESS_3
           , FILE_PATH
           , ORIGIN_NAME
           , CHANGE_NAME
           , A.STATUS
           , NF.F_NO
           , PHOTO
           , SHOP_NAME
      FROM 
            NEWS N
      JOIN TOWN T ON(T.T_NO = N.T_NO)
      LEFT JOIN NEWS_FILE NF ON(N.N_NO = NF.N_NO)
      LEFT JOIN ADDFILE A ON(A.F_NO = NF.F_NO)
      JOIN BUS_INFO B ON(B.SHOP_NO = N.SHOP_NO)
      JOIN AD AD ON(AD.SHOP_NO = N.SHOP_NO)
      JOIN USER_INFO USING(USER_ID)
      WHERE NSTATUS != 'N'
      <if test='area lt 4'>
         AND ADDRESS_1 = #{address_1}
         </if>
         <if test='area lt 3'>
         AND ADDRESS_2 = #{address_2}
         </if>
         <if test='area lt 2'>
         AND ADDRESS_3 =#{address_3}
         </if>
      AND SHOP_CATE='부동산'
      AND VIEW_CNT !=0
      AND BSTATUS != 'N'
        ORDER BY N_NO DESC 

   </select>
   
   <select id="selectCompanynList" parameterType="Town" resultMap="NewsResultSet">

        SELECT  
            N.N_NO
           , NEWS_TITLE
           , SHOP_NEWS
           , N.SHOP_NO
           , N.T_NO
           , ADDRESS_3
           , FILE_PATH
           , ORIGIN_NAME
           , CHANGE_NAME
           , A.STATUS
           , NF.F_NO
           , PHOTO
           , SHOP_NAME
      FROM 
            NEWS N
      JOIN TOWN T ON(T.T_NO = N.T_NO)
      LEFT JOIN NEWS_FILE NF ON(N.N_NO = NF.N_NO)
      LEFT JOIN ADDFILE A ON(A.F_NO = NF.F_NO)
      JOIN BUS_INFO B ON(B.SHOP_NO = N.SHOP_NO)
      JOIN AD AD ON(AD.SHOP_NO = N.SHOP_NO)
      JOIN USER_INFO USING(USER_ID)
      WHERE NSTATUS != 'N'
      <if test='area lt 4'>
         AND ADDRESS_1 = #{address_1}
         </if>
         <if test='area lt 3'>
         AND ADDRESS_2 = #{address_2}
         </if>
         <if test='area lt 2'>
         AND ADDRESS_3 =#{address_3}
         </if>
      AND SHOP_CATE='지역업체'
      AND VIEW_CNT !=0
      AND BSTATUS != 'N'
        ORDER BY N_NO DESC 

   </select>
   
   <select id="selectEventnList" parameterType="Town" resultMap="NewsResultSet">

        SELECT  
            N.N_NO
           , NEWS_TITLE
           , SHOP_NEWS
           , N.SHOP_NO
           , N.T_NO
           , ADDRESS_3
           , FILE_PATH
           , ORIGIN_NAME
           , CHANGE_NAME
           , A.STATUS
           , NF.F_NO
           , PHOTO
           , SHOP_NAME
      FROM 
            NEWS N
      JOIN TOWN T ON(T.T_NO = N.T_NO)
      LEFT JOIN NEWS_FILE NF ON(N.N_NO = NF.N_NO)
      LEFT JOIN ADDFILE A ON(A.F_NO = NF.F_NO)
      JOIN BUS_INFO B ON(B.SHOP_NO = N.SHOP_NO)
      JOIN AD AD ON(AD.SHOP_NO = N.SHOP_NO)
      JOIN USER_INFO USING(USER_ID)
      WHERE NSTATUS != 'N'
      <if test='area lt 4'>
         AND ADDRESS_1 = #{address_1}
         </if>
         <if test='area lt 3'>
         AND ADDRESS_2 = #{address_2}
         </if>
         <if test='area lt 2'>
         AND ADDRESS_3 =#{address_3}
         </if>
      AND SHOP_CATE='전시'
      AND VIEW_CNT !=0
      AND BSTATUS != 'N'
        ORDER BY N_NO DESC 

   </select>
   
   <select id="selectStudynList" parameterType="Town" resultMap="NewsResultSet">

        SELECT  
            N.N_NO
           , NEWS_TITLE
           , SHOP_NEWS
           , N.SHOP_NO
           , N.T_NO
           , ADDRESS_3
           , FILE_PATH
           , ORIGIN_NAME
           , CHANGE_NAME
           , A.STATUS
           , NF.F_NO
           , PHOTO
           , SHOP_NAME
      FROM 
            NEWS N
      JOIN TOWN T ON(T.T_NO = N.T_NO)
      LEFT JOIN NEWS_FILE NF ON(N.N_NO = NF.N_NO)
      LEFT JOIN ADDFILE A ON(A.F_NO = NF.F_NO)
      JOIN BUS_INFO B ON(B.SHOP_NO = N.SHOP_NO)
      JOIN AD AD ON(AD.SHOP_NO = N.SHOP_NO)
      JOIN USER_INFO USING(USER_ID)
      WHERE NSTATUS != 'N'
      <if test='area lt 4'>
         AND ADDRESS_1 = #{address_1}
         </if>
         <if test='area lt 3'>
         AND ADDRESS_2 = #{address_2}
         </if>
         <if test='area lt 2'>
         AND ADDRESS_3 =#{address_3}
         </if>
      AND SHOP_CATE='과외'
      AND VIEW_CNT !=0
      AND BSTATUS != 'N'
        ORDER BY N_NO DESC 
         
   </select>
   
   <update id="updateReadCount" parameterType="_int">
      UPDATE
         AD
      SET
         VIEW_CNT = VIEW_CNT - 1
      WHERE 
         SHOP_NO = #{shopNo}
   </update>
   
   <select id="selectDetail" parameterType="_int" resultMap="businessResultSet">
      SELECT
            *
      FROM 
             V_BUS_INFO
      JOIN AD AD USING(SHOP_NO)
      WHERE
             SHOP_NO = #{shopNo}
      AND VIEW_CNT !=0
      AND BSTATUS != 'N'
             
   </select>
   
   <select id="selectDetailNews" parameterType="_int" resultMap="NewsResultSet">
       SELECT  
            N.N_NO
           , NEWS_TITLE
           , SHOP_NEWS
           , SHOP_NO
           , N.T_NO
           , ADDRESS_3
           , A.FILE_PATH
           , ORIGIN_NAME
           , CHANGE_NAME
           , STATUS
           , NF.F_NO
      FROM 
            NEWS N
      JOIN TOWN T ON(T.T_NO = N.T_NO)
      LEFT JOIN NEWS_FILE NF ON(N.N_NO = NF.N_NO)
      LEFT JOIN ADDFILE A ON(A.F_NO = NF.F_NO)
      JOIN BUS_INFO USING(SHOP_NO)
        JOIN AD AD USING(SHOP_NO)
        WHERE SHOP_NO = #{shopNo}
       AND VIEW_CNT !=0
       AND BSTATUS != 'N'
       AND NSTATUS != 'N'
      
   </select>
   
   <select id="selectDetailReview" parameterType="_int" resultMap="ReviewResultSet">
       SELECT
         B.SHOP_NO
         ,BR.REVIEW_NO
         ,STATUS
         ,CONTENT
         ,REVIEW_DATE
         ,GRADE
         ,R.USER_ID
         ,NICKNAME
             ,(SELECT COUNT(R.REVIEW_NO)
              FROM REVIEW R
              JOIN BUS_REVIEW BR ON(R.REVIEW_NO = BR.REVIEW_NO)
              WHERE BR.SHOP_NO = B.SHOP_NO
              GROUP BY BR.SHOP_NO
              )후기수
              ,(SELECT ROUND(AVG(GRADE))
              FROM REVIEW R 
              JOIN BUS_REVIEW BR ON(R.REVIEW_NO = BR.REVIEW_NO) 
              WHERE BR.SHOP_NO = B.SHOP_NO
              GROUP BY BR.SHOP_NO
              )평균별점
              , PHOTO
      FROM REVIEW R
      JOIN BUS_REVIEW BR ON(BR.REVIEW_NO = R.REVIEW_NO)
      JOIN BUS_INFO B ON(B.SHOP_NO = BR.SHOP_NO)
      JOIN USER_INFO U ON(U.USER_ID = R.USER_ID)
        WHERE B.SHOP_NO = #{shopNo}
        AND BSTATUS != 'N'
        ORDER BY R.REVIEW_NO DESC
   </select>
   
   <select id="selectBusinessInfo" parameterType="string" resultMap="businessResultSet">
      SELECT
            *
      FROM 
             V_BUS_INFO
      WHERE
             USER_ID = #{userId}
      AND BSTATUS != 'N'
             
   </select>
   
   <insert id="infoInsert" parameterType="Business">
      INSERT
      INTO BUS_INFO
      (
         SHOP_NO
        , SHOP_CATE
        , SHOP_ADD
        , SHOP_INTRO
        , SHOP_TIME1
        , TOP_MENU
        , MENU_INFO
        , SHOP_PHONE
        , USER_ID
        , AD_CASH
        , SHOP_TIME2
        , SHOP_TIME3
        , T_NO
        , SHOP_NAME
        
      )
      VALUES
      (
         SEQ_SHOPNO.NEXTVAL
        , #{shopCate}
        , #{shopAdd}
        , #{shopIntro}
        , #{shopTime1}
        , #{topMenu}
        , #{menuInfo}
        , #{shopPhone}
        , #{userId}
        , DEFAULT
        , #{shopTime2}
        , #{shopTime3}
        , #{tNo}
        , #{shopName}
      )
      
   </insert>
   
   <insert id="fileInsert" parameterType="Addfile">
      INSERT ALL
      INTO ADDFILE(
         F_NO
        , ORIGIN_NAME
        , CHANGE_NAME
          , STATUS
          , FILE_LEVEL
      )
      VALUES
      (
         F_SEQ.NEXTVAL
        , #{originName}
        , #{changeName}
          , DEFAULT
          , #{file_level}
       
      )
        INTO BUS_FILE
        (
            SHOP_NO
          , F_NO
        )
        VALUES
        (
            SEQ_SHOPNO.CURRVAL
          , F_SEQ.CURRVAL
        )
        INTO AD
        (    SHOP_NO
           ,  VIEW_CNT 
        )
        VALUES
        (
            SEQ_SHOPNO.CURRVAL
            , DEFAULT
        )
        SELECT * FROM DUAL
   
   
   </insert>
   
   <update id="updateBstatus" parameterType="string">
      UPDATE
         USER_INFO
      SET
         IS_BUSINESS = 'Y'
      WHERE 
         USER_ID = #{userId}
   </update>
   
   <insert id="newsInsert" parameterType="News">
      INSERT
      INTO NEWS
      (
         N_NO
        , NEWS_TITLE
        , SHOP_NEWS
        , SHOP_NO
        , T_NO
        , NSTATUS
        
        
      )
      VALUES
      (
         SEQ_NNO.NEXTVAL
        , #{newsTitle}
        , #{shopNews}
        , #{shopNo}
        , #{tNo}
        , DEFAULT
        
      )
      
   </insert>
   
   <insert id="newsFileInsert" parameterType="Addfile">
     INSERT ALL
      INTO ADDFILE(
         F_NO
        , ORIGIN_NAME
        , CHANGE_NAME
          , STATUS
          , FILE_LEVEL
      )
      VALUES
      (
         F_SEQ.NEXTVAL
        , #{originName}
        , #{changeName}
          , DEFAULT
          , #{file_level}
       
      )
        INTO NEWS_FILE
        (
            N_NO
          , F_NO
        )
        VALUES
        (
            SEQ_NNO.CURRVAL
          , F_SEQ.CURRVAL
        )
        SELECT * FROM DUAL
   
   
   </insert>
   
   <select id="selectshopNo" parameterType="string" resultType="_int">
      SELECT
          SHOP_NO
      FROM USER_INFO
      JOIN BUS_INFO USING(USER_ID)
      WHERE USER_ID = #{userId}
      AND BSTATUS != 'N'
   </select>
   
   <select id="selectNews" parameterType="_int" resultMap="NewsResultSet">
      SELECT 
              N_NO
           , NEWS_TITLE
           , SHOP_NEWS
           , SHOP_NO
           , NN.T_NO
           , ADDRESS_3
           , NN.FILE_PATH
           , ORIGIN_NAME
           , CHANGE_NAME
           , STATUS
           , F_NO
            FROM
        (
        SELECT  
            N.N_NO
           , NEWS_TITLE
           , SHOP_NEWS
           , SHOP_NO
           , N.T_NO
           , ADDRESS_3
           , FILE_PATH
           , ORIGIN_NAME
           , CHANGE_NAME
           , STATUS
           , NF.F_NO
      FROM 
            NEWS N
      JOIN TOWN T ON(T.T_NO = N.T_NO)
      LEFT JOIN NEWS_FILE NF ON(N.N_NO = NF.N_NO)
      LEFT JOIN ADDFILE A ON(A.F_NO = NF.F_NO)
        WHERE SHOP_NO = #{shopNo}
        AND NSTATUS != 'N'
        ORDER BY N_NO DESC 
        ) NN
        JOIN AD AD USING(SHOP_NO)
        JOIN BUS_INFO USING(SHOP_NO)
      WHERE ROWNUM <![CDATA[<=]]> 5
       
       AND BSTATUS != 'N'
      
   </select>
   
   <update id="infoupdate" parameterType="Business">
      UPDATE
         BUS_INFO
      SET
          SHOP_CATE = #{shopCate}
        , SHOP_ADD  = #{shopAdd}
        , SHOP_INTRO = #{shopIntro}
        , SHOP_TIME1 = #{shopTime1}
        , TOP_MENU   = #{topMenu}   
        , MENU_INFO  = #{menuInfo}
        , SHOP_PHONE = #{shopPhone}
        , SHOP_TIME2 = #{shopTime2}
        , SHOP_TIME3 = #{shopTime3}
        , SHOP_NAME  = #{shopName}
      WHERE
         SHOP_NO    = #{shopNo}   
   </update>
   
   <insert id="changeFileInsert" parameterType="Addfile">
   
      INSERT INTO ADDFILE(
         F_NO
        , ORIGIN_NAME
        , CHANGE_NAME
          , STATUS
          , FILE_LEVEL
      )
      VALUES
      (
         F_SEQ.NEXTVAL
        , #{originName}
        , #{changeName}
          , DEFAULT
          , #{file_level}
       
      )

   </insert>
   
   <update id="updateBfile" parameterType="_int">
      UPDATE
         BUS_FILE
      SET
          F_NO = F_SEQ.CURRVAL
      WHERE 
         SHOP_NO = #{shopNo}
   </update>
   
   <insert id="updateFaCount" parameterType="java.util.Map">
      INSERT ALL
       INTO FAVORITE
      (    SHOP_NO
        , USER_ID
        , F_DATE
      
      )
      VALUES
      (   #{shopNo}
        , #{userId}
        , DEFAULT
         
      )
      INTO ALARM
      (
           ALARM_NO
         , ALARM_TYPE
         , ALARM_CONTENT
         , USER_ID
         , ALARM_DATE
         , A_STATUS
      )
      VALUES
      (
           A_SEQ.NEXTVAL
         , 3
         , CONCAT( #{nickName},'님이 회원님의 가게를 단골 등록 하였습니다.')
         , #{buserId}
         , SYSDATE
         , DEFAULT
         
      )
      SELECT * FROM DUAL
      
   </insert>
   
   <update id="deleteBusiness" parameterType="_int">
      UPDATE
         BUS_INFO
      SET
         BSTATUS = 'N'
      WHERE 
         SHOP_NO = #{shopNo}
   </update>
   
   <update id="updateBstatus2" parameterType="string">
      UPDATE
         USER_INFO
      SET
         IS_BUSINESS = 'N'
      WHERE
         USER_ID = #{userId}
   </update>
   
   <insert id="insertReview" parameterType="Review"> 
      INSERT ALL 
      INTO REVIEW
      (
          REVIEW_NO
        ,   STATUS
        , CONTENT
        , REVIEW_DATE
        , GRADE
        , USER_ID
      )
      VALUES
      (
          R_SEQ.NEXTVAL
        , DEFAULT
        , #{content}
        , DEFAULT
        , #{grade}
        , #{userId}   
      )
      INTO BUS_REVIEW
      (
           SHOP_NO
         , REVIEW_NO
      )
      VALUES
      (
           #{shopNo}
         , R_SEQ.CURRVAL

      )
      INTO ALARM
      (
           ALARM_NO
         , ALARM_TYPE
         , ALARM_CONTENT
         , USER_ID
         , ALARM_DATE
         , A_STATUS
      )
      VALUES
      (
           A_SEQ.NEXTVAL
         , 4
         , CONCAT( #{shopName},' 가게의 후기가 등록 되었습니다.')
         , #{buserId}
         , SYSDATE
         , DEFAULT
         
      )
      
      SELECT * FROM DUAL
   
   </insert>
   

   <insert id="cashInsert" parameterType="Payment">
      INSERT ALL 
      INTO PAYMENT
      (
          PID
        ,   PAYMENT
        , PAY_DATE
        , PAY_WAY
      )
      VALUES
      (
          PAY_SEQ.NEXTVAL
        , #{payment}
        , DEFAULT
        , 1   
      )
      INTO AD_CHARGE
      (
           PID
         , SHOP_NO
      )
      VALUES
      (
           PAY_SEQ.CURRVAL
         , #{shopNo}
      )
      SELECT * FROM DUAL
   </insert>
   
   <update id="cashUpdate" parameterType="Payment">
      UPDATE
         BUS_INFO
      SET
         AD_CASH = AD_CASH + #{payment}
      WHERE
         SHOP_NO    = #{shopNo}
   </update>
   
   <select id="selectViewCnt" parameterType="_int" resultType="_int">
      SELECT
         VIEW_CNT
      FROM
          AD
      WHERE
         SHOP_NO =  #{shopNo}
      
   
   </select>
   
   <update id="updateCashUse" parameterType="java.util.Map">
      UPDATE
         BUS_INFO
      SET
         AD_CASH = AD_CASH - #{cash}
      WHERE
         SHOP_NO = #{shopNo}
   </update>
   
   <update id="updateViewCnt" parameterType="java.util.Map">
      UPDATE
         AD
      SET
         VIEW_CNT = VIEW_CNT + #{viewCnt}
      WHERE
         SHOP_NO   = #{shopNo}
   </update>

   <select id="selectMyFavShopCount" resultType="_int" parameterType="string">
      SELECT 
            COUNT(USER_ID)
      FROM
            FAVORITE
      WHERE 
               USER_ID = #{user_id}
   </select>
   
   <select id="selectMyFavShopList" resultMap="businessResultSet" parameterType="string">
      SELECT 
            SHOP_NO,
            SHOP_NAME,
            SHOP_ADD,
            단골수,
            후기수,
            CHANGE_NAME,
            SHOP_TIME3
        FROM 
              V_BUS_INFO
       JOIN 
             FAVORITE USING(SHOP_NO)
      WHERE 
            FAVORITE.USER_ID = #{user_id}
   </select>
   
   
    <select id="selectFaUserList" parameterType="java.util.Map" resultType="_int">
      SELECT
         COUNT(USER_ID)
      FROM 
         FAVORITE
      WHERE
         SHOP_NO = #{shopNo}
      AND
         USER_ID = #{userId}
   </select>
   
   <delete id="deleteFaCount" parameterType="java.util.Map" >
      DELETE FROM FAVORITE
      WHERE 
         SHOP_NO = #{shopNo}
      AND 
         USER_ID = #{userId}
   </delete> 
   
   <delete id="deleteReview" parameterType="string">
      DELETE FROM BUS_REVIEW
      WHERE
         REVIEW_NO = #{reviewNo}
   </delete>
   
   <delete id="deleteReview2" parameterType="string">
      DELETE FROM REVIEW
      WHERE
         REVIEW_NO = #{reviewNo}
   </delete>
   
   <update id="updateUserPoint" parameterType="string">
      UPDATE
         USER_INFO
      SET
         POINT = POINT + 10
      WHERE
         USER_ID   = #{userId}
   </update>
   
   <update id="deleteNews" parameterType="_int">
      UPDATE
         NEWS
      SET
         NSTATUS = 'N'
      WHERE
         N_NO = #{n_no}
   </update>

  <select id="selectBusis" parameterType="_int" resultMap="businessResultSet">
      SELECT TO_CHAR(P.PAY_DATE, 'YYYY.MM') MONTH1, SUM(P.PAYMENT) BUSICASH
   FROM AD_CHARGE AC JOIN PAYMENT P
   ON(AC.PID = P.PID)
   WHERE TO_CHAR(P.PAY_DATE, 'YYYY.MM')  = TO_CHAR(SYSDATE, 'YYYY.MM')
   OR  TO_CHAR(P.PAY_DATE, 'YYYY.MM')  = TO_CHAR(ADD_MONTHS(SYSDATE,-1),'YYYY.MM')
   GROUP BY TO_CHAR(P.PAY_DATE, 'YYYY.MM')
   ORDER BY TO_CHAR(P.PAY_DATE, 'YYYY.MM') ASC
   </select> 
   
   <select id="selectRevs" parameterType="_int" resultMap="businessResultSet">
      SELECT TO_CHAR(P.PAY_DATE, 'YYYY.MM') MONTH1, SUM(P.PAYMENT) BUSICASH
FROM PAYMENT P JOIN DEAL_PAYMENT DP
ON( DP.PID = P.PID)
WHERE P.PAY_WAY = 1
AND (TO_CHAR(P.PAY_DATE, 'YYYY.MM')  = TO_CHAR(SYSDATE, 'YYYY.MM')
OR  TO_CHAR(P.PAY_DATE, 'YYYY.MM')  = TO_CHAR(ADD_MONTHS(SYSDATE,-1),'YYYY.MM'))
GROUP BY TO_CHAR(P.PAY_DATE, 'YYYY.MM')
ORDER BY TO_CHAR(P.PAY_DATE, 'YYYY.MM') ASC
   </select> 
   
   <select id="selectSumBu" parameterType="_int" resultMap="businessResultSet">
   SELECT sum(P.PAYMENT) busicash
FROM PAYMENT P, AD_CHARGE ac
WHERE P.PID = ac.PID
   </select> 
   
   <select id="selectSumRe" parameterType="_int" resultMap="businessResultSet">
   SELECT sum(P.PAYMENT) busicash
FROM PAYMENT P, DEAL_PAYMENT DP
WHERE P.PID = DP.PID
   </select> 
   
   

</mapper>